//@import './theme/theme.scss';

// Movbile Navbar inspiration from: https://www.cssscript.com/pure-css-fold-out-navigation-menu/

.menuToggle {
  display: block;
  position: absolute;
  top: 20px;
  right: 20px;
  z-index: 2;
  -webkit-user-select: none;
  user-select: none;
  width: fit-content;

  p{
    color:white;
  }

  label{
    color:white;
  }
}

.menu {
  display: grid;
  grid-template-columns: 1fr;
  position: absolute;
  width: auto;
  margin: -80px 0 0 -200px;
  margin-top: 60px;
  list-style-type: none;
  transform-origin: 0% 0%;
  transform: translate(100%, 0);
  transition: transform 0.5s cubic-bezier(0.77, 0.2, 0.05, 1.0);

  a {
    padding: 4px 4px;
    font-size: 1.2rem;
    color: white;
    border: none;
    text-decoration: none;
  }
}

.menu_shown{
  display: grid;
  grid-template-columns: 1fr;
  position: absolute;
  width: auto;
  margin: -80px 0 0 -200px;
  margin-top: 60px;
  list-style-type: none;
  transform-origin: 0% 0%;
  transform: translate(0, 0);
  transition: transform 0.5s cubic-bezier(0.77, 0.2, 0.05, 1.0);

  a {
    padding: 4px 4px;
    font-size: 1.2rem;
    color: white;
    border: none;
    text-decoration: none;
  }
}


.aside{
  height: 100vh;
  width: 25vh;
  position: fixed;
  right:0;
  top:0;
  z-index: 2;
  background-color:blue;
}


// Variables needed to control the position as well as the size of the burgermenu
// Change these values to change behaviour
$bar-width: 36px;
$bar-height:5px;
$bar-margin: 4px;
$position:relative;
$left:0;
$right:0;
$top:0;
$bottom:0;
$color: white;
$border-radius: 3px;


// Mixins used for control over look and feel as well as positions of spans
 @mixin spanBar($width, $height){
    display: block;
    width: $width;
    height: $height;
    background-color: $color;
    margin: $bar-margin;
    border-radius: $border-radius;
    padding: 0;
    transition: ease 0.4s;
 }

 @mixin burgerMenu($position,$left,$right,$top,$down){
    display:block;
    position: $position;
    left: $left;
    right: $right;
    top: $top;
    bottom: $bottom;
    width: auto;
    height: auto;
    cursor: pointer;
 }

// Set box sizing on body and create two classes which include the necessary mixins
body{
    box-sizing: border-box;
  .burger-container{
    position:absolute;
    left: 25%;
    top: 25%;
  }
}

.burger_menu{
    @include burgerMenu($position,$left,$right,$top,$bottom);
    span{
        @include spanBar($bar-width, $bar-height);
    }
}

// Then transform position and rotation on all the children
.burger_menu_collapsed{
    @include burgerMenu($position,$left,$right,$top,$bottom);
    
    // First span gets moved down equal to (its own height + margin) * 1, and rotated +45 deg.
    span:nth-child(1){
        @include spanBar($bar-width, $bar-height);
        transform:translateY(($bar-height + $bar-margin)*1) rotate(45deg);
    }
    
    // Second span gets scaled to 0, thus zooming in and dissapearing.
    span:nth-child(2){
        @include spanBar($bar-width, $bar-height);
        transform: scale(0);
    }
    
    // Third span gets gets moved up equal to negative its own (height + margin) * 1 and rotated -45deg.
    span:nth-child(3){
        @include spanBar($bar-width, $bar-height);
        transform:translateY((-$bar-height - $bar-margin)*1) rotate(-45deg);
    }    
}